name: Deploy
on:
  push:
    branches: [ "master"]
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  ECR_REPOSITORY_NAME: forum-client

jobs:
  deploy:
    name: Deploy
    concurrency: client-deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::575737149124:role/forum-client-deploy
        aws-region: us-east-1
    - name: Create ECR repo if not exists
      run: |
        aws ecr describe-repositories --repository-name $ECR_REPOSITORY_NAME || aws ecr create-repository --repository-name $ECR_REPOSITORY_NAME
        aws ecr set-repository-policy --repository-name $ECR_REPOSITORY_NAME --policy-text file://./policies/repository-policy.json
        aws ecr put-lifecycle-policy --repository-name $ECR_REPOSITORY_NAME --lifecycle-policy-text file://./policies/lifecycle-policy.json
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: 575737149124
        mask-password: "true"
    - name: Build, tag, and push image to Amazon ECR
      id: build-publish
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{github.sha}}
      run: |
        echo $ECR_REGISTRY
        echo $ECR_REPOSITORY_NAME
        echo $IMAGE_TAG
        docker build . -f Dockerfile -t "$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG"
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG"
        echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY_NAME"
        echo "image_tag=$IMAGE_TAG" 
        echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG"
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.2
    - name: Terraform Plan
      run: |
        terraform init
        terraform fmt -check
        terraform plan -input=false -out=tfplan \
          -var "ecr_repository_name=$ECR_REPOSITORY_NAME" \
          -var "git_commit_sha=${{github.sha}}"
      working-directory: ./terraform
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false tfplan
      working-directory: ./terraform
    
